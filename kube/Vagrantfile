require 'yaml'

nodes_def = YAML.load_file('nodes.yml')

# This guide is optimized for Vagrant 1.7 and above.
# Although versions 1.6.x should behave very similarly, it is recommended
# to upgrade instead of disabling the requirement below.
Vagrant.require_version ">= 1.7.0"

Vagrant.configure(2) do |config|

  nodes_def.each do |node|
    config.vm.define node['name'] do |n|
      # node definition
      n.vm.hostname = node['name']
      n.vm.box = node['box']

      #puts node['vm']['name'] || node['name']

      if node['networking'].is_a?(Array) && !node['networking'].nil?
        node['networking'].each do |network|
	  case network['type']
	  when "private_network"
	    n.vm.network "private_network", ip: network['ip']
	  else
	    puts "Unknown network type"
	  end
        end
      end

      # provider definition
      if node['vm'].is_a?(Hash)
        n.vm.provider 'virtualbox' do |vb|
          vb.name = node['vm']['name'] if node['vm'].key?('name')
          vb.memory = node['vm']['memory'] if node['vm'].key?('memory')
          vb.cpus = node['vm']['cpus'] if node['vm'].key?('cpus')
        end

        if node['vm'].key?('synced_folders') && !node['vm']['synced_folders'].nil?
          node['vm']['synced_folders'].each do |sf|
            if File.directory?(sf['src'])
              config.vm.synced_folder "#{sf['src']}", "#{sf['dest']}"
            end
          end
        end
      end

      # provision
      if node['provision'].is_a?(Array) && !node['provision'].nil?
        node['provision'].each do |p|
	   case p['type']

	   when "ansible"
	     n.vm.provision 'ansible' do |ansible|
	        ansible.playbook = p['playbook_path']
	        ansible.inventory_path = p['inventory_path'] if p['inventory_path']
                ansible.verbose = p['verbose'] if p['verbose']
                ansible.tags = p['tags'] if p['tags']
                ansible.extra_vars = p['extra_vars'] if p['extra_vars']
	     end	     

           when "inline"
	     n.vm.provision "shell" do |s|
	       s.inline = p['script']
	       s.args = p['args'] if !p['args'].nil?
             end
	   else
	     puts "Unknown provisioning type"
	   end	  
	end  	
      end

    end
  end
end
